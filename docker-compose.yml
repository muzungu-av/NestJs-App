services:
  paint-back-api:
    image: paint-back-api-img
    container_name: "paint-back-api"
    restart: unless-stopped
    env_file:
      - ./backend-api/.env.$ENVIRONMENT
    ports:
      - 4001:4001
    build:
      context: .
      dockerfile: ./backend-api/Dockerfile
    environment:
      - NODE_ENV=$ENVIRONMENT
    volumes:
      - ./backend-api/logs:/app/logs
      - hashed_pass_volume:/app/shared_volume
    networks:
      pic_network:
        ipv4_address: 172.18.0.103 # IP кешируется в Docker после смены нужно сделать `docker network prune`

  mongodb:
    container_name: mongodb
    image: paint-mongo
    restart: unless-stopped
    depends_on:
      - paint-back-api # там формируется bcrypt-хеш пароля... ждем его
    ports:
      - 127.0.0.1:27017:27017
    build:
      context: .
      dockerfile: ./mongo/Dockerfile
    volumes:
      - paint_mongo_data:/var/lib/mongodb
      - ./mongo/mongod_log:/var/log/mongodb/
      - hashed_pass_volume:/tmp/shared_volume

    command: mongod --logpath /var/log/mongodb/mongod.log --config /etc/mongod.conf --keyFile /var/lib/mongodb/mongodb-keyfile
    networks:
      pic_network:
        ipv4_address: 172.18.0.110 # IP кешируется в Docker после смены нужно сделать `docker network prune`

  paint-front:
    image: paint-front-img
    container_name: "paint-front"
    restart: unless-stopped
    depends_on:
      - mongodb
      - paint-back-api
    ports:
      - 8081:8081
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    networks:
      pic_network:
        ipv4_address: 172.18.0.102 # IP кешируется в Docker после смены нужно сделать `docker network prune`

  art-config:
    image: art-config-img
    container_name: "art-config"
    restart: unless-stopped
    depends_on:
      - mongodb
      - paint-back-api
    ports:
      - 8085:8085
    build:
      context: .
      dockerfile: ./artConfigurator/Dockerfile
    networks: # IP кешируется в Docker после смены нужно сделать `docker network prune`
      pic_network:
        ipv4_address: 172.18.0.104

  mongo-gui:
    container_name: "mongo-gui"
    image: ugleiton/mongo-gui
    restart: unless-stopped
    ports:
      - 4321:4321
    environment:
      - MONGO_URL=${MONGO_DB_URI}
    networks:
      pic_network:
        ipv4_address: 172.18.0.111

volumes:
  paint_mongo_data:
    external: true

  # для обмена bcrypt-хешем пароля между контейнерами
  hashed_pass_volume:

networks:
  pic_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/24
          gateway: 172.18.0.1
